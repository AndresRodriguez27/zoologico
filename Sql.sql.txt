-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.animal
(
    especie_id bigint,
    id bigint NOT NULL DEFAULT nextval('animal_id_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT animal_pkey PRIMARY KEY (id),
    CONSTRAINT animal_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.comentario
(
    animal_id bigint,
    id bigint NOT NULL DEFAULT nextval('comentario_id_seq'::regclass),
    usuario_id bigint,
    comentario character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT comentario_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.especie
(
    id bigint NOT NULL DEFAULT nextval('especie_id_seq'::regclass),
    zona_id bigint,
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT especie_pkey PRIMARY KEY (id),
    CONSTRAINT especie_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.persona
(
    identificacion bigint NOT NULL DEFAULT nextval('persona_identificacion_seq'::regclass),
    celular character varying(255) COLLATE pg_catalog."default",
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT persona_pkey PRIMARY KEY (identificacion)
);

CREATE TABLE IF NOT EXISTS public.rol
(
    id bigint NOT NULL DEFAULT nextval('rol_id_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT rol_pkey PRIMARY KEY (id),
    CONSTRAINT rol_nombre_key UNIQUE (nombre)
);

CREATE TABLE IF NOT EXISTS public.usuario
(
    id bigint NOT NULL DEFAULT nextval('usuario_id_seq'::regclass),
    rol_id bigint,
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT usuario_pkey PRIMARY KEY (id),
    CONSTRAINT usuario_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.usuario_persona
(
    persona_id bigint NOT NULL,
    usuario_id bigint NOT NULL
);

CREATE TABLE IF NOT EXISTS public.zona
(
    id bigint NOT NULL DEFAULT nextval('zona_id_seq'::regclass),
    nombre character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT zona_pkey PRIMARY KEY (id),
    CONSTRAINT zona_nombre_key UNIQUE (nombre)
);

ALTER TABLE IF EXISTS public.animal
    ADD CONSTRAINT fkccujj18mdt2bxcpilwh04pjvq FOREIGN KEY (especie_id)
    REFERENCES public.especie (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.comentario
    ADD CONSTRAINT fk3p944xhnxl5hvy0tw9b1p9icp FOREIGN KEY (animal_id)
    REFERENCES public.animal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.comentario
    ADD CONSTRAINT fkixspmid2pb85o8ypsd20jakxg FOREIGN KEY (usuario_id)
    REFERENCES public.usuario (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.especie
    ADD CONSTRAINT fk61qch2rmqpxaj6855f7rpmg9p FOREIGN KEY (zona_id)
    REFERENCES public.zona (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario
    ADD CONSTRAINT fkshkwj12wg6vkm6iuwhvcfpct8 FOREIGN KEY (rol_id)
    REFERENCES public.rol (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario_persona
    ADD CONSTRAINT fk3gxtrgvq79qfd1elf55mte309 FOREIGN KEY (persona_id)
    REFERENCES public.persona (identificacion) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.usuario_persona
    ADD CONSTRAINT fkgb3jn5jvafdyb87i8o0m8tk79 FOREIGN KEY (usuario_id)
    REFERENCES public.usuario (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;